spring:
  application:
    name: ${SERVICE_NAME:myapplication}
  security:
    oauth2:
      resourceserver:
        jwt:
          public-key-location: classpath:jwt/public-key.pem
          private-key-location: classpath:jwt/private-key.pem
          validity-in-seconds: 3600
  cache:
    type: none
    cache-names: cache1,cache2,cache3
    redis:
      enable-statistics: true
      time-to-live: 10m
  data:
    redis:
      repositories:
        enabled: false
      timeout: 1s
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      connect-timeout: 1s
      password: ${REDIS_PASSWORD:supersecurepassword}
  autoconfigure:
    exclude:
      # comment out redis auto configuration if redis cache is set
      - org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration
      - org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration
      - org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration

  datasource:
    username: sa
    password: password
    url: jdbc:h2:mem:test
    driver-class-name: org.h2.Driver
  jpa:
    open-in-view: false
    generate-ddl: true
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        generate_statistics: false

springdoc:
  auto-tag-classes: false
  show-login-endpoint: true
  swagger-ui:
    operationsSorter: alpha
    tagsSorter: alpha
    displayRequestDuration: true
    defaultModelsExpandDepth: 3
    defaultModelExpandDepth: 3
    showExtensions: true
    showCommonExtensions: true
    filter: true
  packages-to-scan: com.example.web

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always
